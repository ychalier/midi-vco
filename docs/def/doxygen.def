AutoGen Definitions dummy;
class = {
  cp-id     = 'class_allocator';
  cp-name   = 'Allocator';
  cp-section = {
    sec-kind = 'public-func';
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_allocator_1a3b806d3c731255a0ef994cf8ee715fdc';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'Allocator';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
Config *
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'config';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
Display *
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'display';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = 'D:/Code/midi-vco/main/include/allocator.h';
      sec-mem-desc-line = '24';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Construct an allocator given a config.

@param config The config to pass to the allocator.
@param display A pointer to the LED display wrapper.
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_allocator_1abd222486ac63d3a9b4e7cabb91569617';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'setup';
      sec-mem-desc-file = 'D:/Code/midi-vco/main/include/allocator.h';
      sec-mem-desc-line = '30';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Initialize hardware connections. Must be called once in the main program
setup phase.
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_allocator_1aa0fc5e188c61f8b1f2dfa4e33694538f';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'set_masks';
      sec-mem-desc-file = 'D:/Code/midi-vco/main/include/allocator.h';
      sec-mem-desc-line = '36';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Set the pool's masks according to the current configuration. All pools
will be stopped and reset, even if they're active.
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_allocator_1a05495536e18d1814ef24b406a67b92bd';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'display_state';
      sec-mem-desc-file = 'D:/Code/midi-vco/main/include/allocator.h';
      sec-mem-desc-line = '42';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Display the current pools settings using the LED display. LED <em>i</em> will
lit up iff. pool <em>i</em> is accepting notes.
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_allocator_1ac488e12b005e2ac5ffd222ea69825a34';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'note_on';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
Note
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'note';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = 'D:/Code/midi-vco/main/include/allocator.h';
      sec-mem-desc-line = '53';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Handler for the <em>note-on</em> MIDI message. The note will be allocated a
pool if there's one available right now or if a priority rule says to
make room for it.

@see [Politique d'allocation des voies](https://github.com/ychalier/midi-vco/wiki/Politique-d'allocation-des-voies)

@param note The note associated with the <em>note-on</em> message.
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_allocator_1a503686789d548982a45389b201385c8a';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'note_off';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
Note
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'note';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = 'D:/Code/midi-vco/main/include/allocator.h';
      sec-mem-desc-line = '61';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Handler for the <em>note-off</em> MIDI message. A pool currently playing that
note will stop playing it.

@param note The note associated with the <em>note-off</em> message.
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_allocator_1a43ecbe4ea6290cad954bfce0273a27ff';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'pitch_bend';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
byte
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'channel';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'bend';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = 'D:/Code/midi-vco/main/include/allocator.h';
      sec-mem-desc-line = '71';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Handler for the <em>pitch-bend</em> MIDI message.

@param channel MIDI channel concerned with the bending; only concerned
    pools (regarding their channel mask) will be affected.
@param bend Signed 14-bit encoding of the current position of the
    pitch-bend control.
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-section = {
    sec-kind = 'private-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'class_allocator_1a725cbc92da006250a9ab26c7f14e9fc4';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
Config *
_EnD_oF_dEf_TeXt_;
      sec-mem-name = '_config';
      sec-mem-desc-file = 'D:/Code/midi-vco/main/include/allocator.h';
      sec-mem-desc-line = '75';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
A reference to the global user config.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'class_allocator_1a3cb5175dcc8454651c3892b56e43bd47';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
Display *
_EnD_oF_dEf_TeXt_;
      sec-mem-name = '_display';
      sec-mem-desc-file = 'D:/Code/midi-vco/main/include/allocator.h';
      sec-mem-desc-line = '78';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
A reference to the global LED display.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'class_allocator_1ae41a618541abf323cde7244f014339bf';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
Router *
_EnD_oF_dEf_TeXt_;
      sec-mem-name = '_router';
      sec-mem-desc-file = 'D:/Code/midi-vco/main/include/allocator.h';
      sec-mem-desc-line = '81';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
One router for controlling the output lanes.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'class_allocator_1aad52b8980e2b6f5c4f1b340219a5cc30';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
Pool *
_EnD_oF_dEf_TeXt_;
      sec-mem-name = '_pools';
      sec-mem-desc-file = 'D:/Code/midi-vco/main/include/allocator.h';
      sec-mem-desc-line = '85';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Array of lane pools; the size of this array should be the same as the
number of output lanes. 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = 'D:/Code/midi-vco/main/include/allocator.h';
  cp-fileline  = '15';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_
Main wrapper for the pools that handles callbacks from the MIDI library.
_EnD_oF_dEf_TeXt_;
}; /* class */
class = {
  cp-id     = 'class_config';
  cp-name   = 'Config';
  cp-section = {
    sec-kind = 'public-func';
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_config_1abd0c571c116924871e30444b192b792a';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'Config';
      sec-mem-desc-file = 'D:/Code/midi-vco/main/include/config.h';
      sec-mem-desc-line = '13';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_config_1add9dfc573e6408dd4c1fd1e5c6293ba0';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'setup';
      sec-mem-desc-file = 'D:/Code/midi-vco/main/include/config.h';
      sec-mem-desc-line = '19';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Initialize hardware connections. Must be called once in the main program
setup phase.
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_config_1a04a241a25d71ee97d1b99b89229d2c82';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
bool
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'read';
      sec-mem-desc-file = 'D:/Code/midi-vco/main/include/config.h';
      sec-mem-desc-line = '51';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Check all connected inputs for their current value and store it in the
configuration.

@return Whether any change in configuration occured during the reading.
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_config_1a0829ddc00aa82818f6f8381f8ba0286e';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
byte
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'get_polyphony_mode';
      sec-mem-desc-file = 'D:/Code/midi-vco/main/include/config.h';
      sec-mem-desc-line = '56';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Getter for the _polyphony_mode attribute.
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_config_1ab433148c636ab05f4f00f39c7bfcc8eb';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
byte
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'get_priority_mode';
      sec-mem-desc-file = 'D:/Code/midi-vco/main/include/config.h';
      sec-mem-desc-line = '61';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Getter for the _priority_mode attribute.
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_config_1a6bba320c0aca0977bc76ce70f2aef047';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
byte
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'get_channel_filter';
      sec-mem-desc-file = 'D:/Code/midi-vco/main/include/config.h';
      sec-mem-desc-line = '66';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Getter for the _channel_filter attribute.
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-section = {
    sec-kind = 'public-static-func';
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_config_1a917bbeb21176cbb7f66e09e10dcaa326';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
static byte
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'categorize_polyphony_mode';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'input_value';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = 'D:/Code/midi-vco/main/include/config.h';
      sec-mem-desc-line = '27';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Associate a polyphony mode given an analog user input.

@param input_value Analog input, a number between 0 and 1023.
@return The associated polyphony mode.
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_config_1ad30e37b290fcd1b14a64d5c677fea523';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
static byte
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'categorize_priority_mode';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'input_value';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = 'D:/Code/midi-vco/main/include/config.h';
      sec-mem-desc-line = '35';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Associate a priority mode given an digital user input.

@param input_value Digital input, either HIGH or LOW.
@return The associated priority mode.
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_config_1a7e3faef6c01ca6346bad96e2886b0ebd';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
static byte
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'categorize_channel_filter';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'input_value';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = 'D:/Code/midi-vco/main/include/config.h';
      sec-mem-desc-line = '43';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Associate a channel filter given an digital user input.

@param input_value Digital input, either HIGH or LOW.
@return The associated channel filter.
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-section = {
    sec-kind = 'private-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'class_config_1a854182219145c9e592fba7be0f7bcd2b';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
byte
_EnD_oF_dEf_TeXt_;
      sec-mem-name = '_polyphony_mode';
      sec-mem-desc-file = 'D:/Code/midi-vco/main/include/config.h';
      sec-mem-desc-line = '69';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'class_config_1ac43b8211f6a7980a690a423d5dc7dc58';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
byte
_EnD_oF_dEf_TeXt_;
      sec-mem-name = '_priority_mode';
      sec-mem-desc-file = 'D:/Code/midi-vco/main/include/config.h';
      sec-mem-desc-line = '70';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'class_config_1a7c7afd39f99f5589ebd1dca8c3390299';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
byte
_EnD_oF_dEf_TeXt_;
      sec-mem-name = '_channel_filter';
      sec-mem-desc-file = 'D:/Code/midi-vco/main/include/config.h';
      sec-mem-desc-line = '71';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = 'D:/Code/midi-vco/main/include/config.h';
  cp-fileline  = '10';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_
Main wrapper for the user interface.
_EnD_oF_dEf_TeXt_;
}; /* class */
class = {
  cp-id     = 'class_display';
  cp-name   = 'Display';
  cp-section = {
    sec-kind = 'public-func';
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_display_1ae972fffea6f7ca1d627ef48c3d841bb3';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'Display';
      sec-mem-desc-file = 'D:/Code/midi-vco/main/include/display.h';
      sec-mem-desc-line = '17';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_display_1ada73f4cecc58feafaecdb9e77747747d';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'setup';
      sec-mem-desc-file = 'D:/Code/midi-vco/main/include/display.h';
      sec-mem-desc-line = '23';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Initialize hardware connections. Must be called once in the main program
setup phase.
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_display_1a029e484ca4bdf9d3794c8ab36375307e';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'reset_leds';
      sec-mem-desc-file = 'D:/Code/midi-vco/main/include/display.h';
      sec-mem-desc-line = '28';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Set all LEDs to LOW.
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_display_1a8a6957eb3da9e75b5892160aa8a13b40';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'start';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
byte
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'pattern';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
unsigned long
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'duration';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = 'D:/Code/midi-vco/main/include/display.h';
      sec-mem-desc-line = '37';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Load and display a new pattern.

@param pattern Mask for which LED to lit. Least significant bits map to
    first LEDs.
@param duration How long to maintain the pattern for, in milliseconds.
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_display_1a28dfd39c608fb69f39823ab6d0fccc3b';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'set_pattern';
      sec-mem-desc-file = 'D:/Code/midi-vco/main/include/display.h';
      sec-mem-desc-line = '42';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Set the LED pins state from the current pattern.
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_display_1ad2740b779d61e461c4dcaaf34f1fcd8f';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'update';
      sec-mem-desc-file = 'D:/Code/midi-vco/main/include/display.h';
      sec-mem-desc-line = '49';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Check if the current pattern has expired. If it is the case, LEDs are
reset and the lock is removed. This function is safe for repeated calls
in the main loop.
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_display_1a94959fa947bc75e37b8d8f0f833c442f';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'set_led_state';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'led_id';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'state';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = 'D:/Code/midi-vco/main/include/display.h';
      sec-mem-desc-line = '59';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Manually set the state of an LED. This has no effect if the display is
locked. External components must use this function to alter the LED
display.

@param led_id Id of the LED to alter.
@param state Either HIGH (lit) or LOW (off).
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_display_1a00fd7d2935aee942403cf7d1fca6b819';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'get_led_state';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'led_id';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = 'D:/Code/midi-vco/main/include/display.h';
      sec-mem-desc-line = '67';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Retrieve the state that a given LED has within the current pattern.

@param led_id Id of the LED to retrieve the target state of.
@return Either HIGH (lit) or LOW (off).
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_display_1ab089792e270aa44b051381917e762fdf';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'demo';
      sec-mem-desc-file = 'D:/Code/midi-vco/main/include/display.h';
      sec-mem-desc-line = '72';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
A quick animation for testing the LEDs.
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-section = {
    sec-kind = 'private-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'class_display_1a553bcf89c1f4bf906416b1c628d44bb5';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      sec-mem-name = '_leds';
      sec-mem-desc-file = 'D:/Code/midi-vco/main/include/display.h';
      sec-mem-desc-line = '76';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Array containing LED pins.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'class_display_1a3dfd0bc0c4aceedd0ea402ccca036184';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
bool
_EnD_oF_dEf_TeXt_;
      sec-mem-name = '_locked';
      sec-mem-desc-file = 'D:/Code/midi-vco/main/include/display.h';
      sec-mem-desc-line = '79';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
If true, external components may not alter LEDs states.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'class_display_1a093653bae1ad39afe596c303e279ff09';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
byte
_EnD_oF_dEf_TeXt_;
      sec-mem-name = '_pattern';
      sec-mem-desc-file = 'D:/Code/midi-vco/main/include/display.h';
      sec-mem-desc-line = '83';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Mask encoding which LEDs are lit in the display pattern.
Least significant bits map to firsts LEDs. 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'class_display_1a240c883d634ad5590aa8d15a41276d6f';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
unsigned long
_EnD_oF_dEf_TeXt_;
      sec-mem-name = '_start';
      sec-mem-desc-file = 'D:/Code/midi-vco/main/include/display.h';
      sec-mem-desc-line = '86';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Timestamp of when the target display started, in milliseconds.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'class_display_1a665cb0ea19a81bc6776bd9cfdc4e0695';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
unsigned long
_EnD_oF_dEf_TeXt_;
      sec-mem-name = '_duration';
      sec-mem-desc-file = 'D:/Code/midi-vco/main/include/display.h';
      sec-mem-desc-line = '89';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
How long to display the target display for, in milliseconds.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = 'D:/Code/midi-vco/main/include/display.h';
  cp-fileline  = '13';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_
Wrapper for the LED display.

Other components in the code should use this to update the state of an LED.
It allows for non-blocking pattern display on top of such updates.
_EnD_oF_dEf_TeXt_;
}; /* class */
class = {
  cp-id     = 'class_lane';
  cp-name   = 'Lane';
  cp-section = {
    sec-kind = 'public-func';
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_lane_1afe99e0252f2c0605ab984e39a5679b92';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'Lane';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
Display *
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'display';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
MCP4822 *
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'dac';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
bool
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'dac_channel';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'gate_pin';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'led_id';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = 'D:/Code/midi-vco/main/include/lane.h';
      sec-mem-desc-line = '24';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Constructor.

@param display A pointer to the LED display.
@param dac A pointer to the DAC controlling the CV signal of that lane.
@param dac_channel If true, use DAC channel A; otherwise use channel B.
@param gate_pin PIN controlling the GATE signal.
@param led_id Id of the LED to control in the display, mapped to GATE.
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_lane_1acdb78fd93cd0f8e17c775b4d410f63f4';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'setup';
      sec-mem-desc-file = 'D:/Code/midi-vco/main/include/lane.h';
      sec-mem-desc-line = '30';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Initialize hardware connections. Must be called once in the main program
setup phase.
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_lane_1aafa90d0e5e6f5311ddba99ce2bddde6a';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'set';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'setpoint';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = 'D:/Code/midi-vco/main/include/lane.h';
      sec-mem-desc-line = '37';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Set the CV signal to a setpoint.

@param setpoint DAC input value.
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_lane_1ac3dc9b1a55f37ae67b96701c387feb47';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'play';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'setpoint';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
unsigned long
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'duration';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = 'D:/Code/midi-vco/main/include/lane.h';
      sec-mem-desc-line = '46';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Play a note for a given duration. Warning: this methods blocks the whole
program, use only for testing purposes.

@param setpoint DAC input value.
@param duration Note duration in milliseconds.
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_lane_1ab49f94d71f3a290e8086ed6ad4f25461';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'start';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'setpoint';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = 'D:/Code/midi-vco/main/include/lane.h';
      sec-mem-desc-line = '54';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Set the CV signal to a setpoint and set the GATE to HIGH. Use this
method to start playing a note without blocking the main loop.

@param setpoint DAC input value.
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_lane_1ade5504da830139b0588bb21a6fd7c52a';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'stop';
      sec-mem-desc-file = 'D:/Code/midi-vco/main/include/lane.h';
      sec-mem-desc-line = '59';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Set the GATE to LOW.
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-section = {
    sec-kind = 'public-static-func';
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_lane_1a1e467c4df8085b9067c05ffd4e58120a';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
static int
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'pitch_to_voltage';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
byte
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'pitch';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'bend';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = 'D:/Code/midi-vco/main/include/lane.h';
      sec-mem-desc-line = '70';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Compute the DAC input value from a note.

@see <a href="https://github.com/ychalier/midi-vco/wiki/Conversion-du-MIDI-en-tension">Conversion du MIDI en tension</a>

@param pitch Note pitch in semitons.
@param bend Signed 14-bit encoding of the pitch bend.
@return DAC input value corresponding to that note.
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-section = {
    sec-kind = 'private-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'class_lane_1aeac5c59778a823413d6dadccd0471129';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
Display *
_EnD_oF_dEf_TeXt_;
      sec-mem-name = '_display';
      sec-mem-desc-file = 'D:/Code/midi-vco/main/include/lane.h';
      sec-mem-desc-line = '73';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'class_lane_1ac452fb9146a34283e269d27c265f1ea6';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
MCP4822 *
_EnD_oF_dEf_TeXt_;
      sec-mem-name = '_dac';
      sec-mem-desc-file = 'D:/Code/midi-vco/main/include/lane.h';
      sec-mem-desc-line = '74';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'class_lane_1abdc41a879107d2b56157e901d74c4aef';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
bool
_EnD_oF_dEf_TeXt_;
      sec-mem-name = '_dac_channel';
      sec-mem-desc-file = 'D:/Code/midi-vco/main/include/lane.h';
      sec-mem-desc-line = '75';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'class_lane_1a33c6f1c70f89021cab3cab920ad0dcd3';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      sec-mem-name = '_gate_pin';
      sec-mem-desc-file = 'D:/Code/midi-vco/main/include/lane.h';
      sec-mem-desc-line = '76';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'class_lane_1a4dbb3a06cba805b6f8c239fe874b12e9';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      sec-mem-name = '_led_id';
      sec-mem-desc-file = 'D:/Code/midi-vco/main/include/lane.h';
      sec-mem-desc-line = '77';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = 'D:/Code/midi-vco/main/include/lane.h';
  cp-fileline  = '12';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_
Manage one output VCO (CV and GATE signals).
_EnD_oF_dEf_TeXt_;
}; /* class */
struct = {
  cp-id     = 'struct_note';
  cp-name   = 'Note';
  cp-section = {
    sec-kind = 'public-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'struct_note_1ac29a6e8a6ed84948366cadd932394074';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
byte
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'channel';
      sec-mem-desc-file = 'D:/Code/midi-vco/main/include/note.h';
      sec-mem-desc-line = '12';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
MIDI channel (from 1 to 16)
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'struct_note_1a33af0cf423b895fa60d6a0d8e9cdfd7b';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
byte
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'pitch';
      sec-mem-desc-file = 'D:/Code/midi-vco/main/include/note.h';
      sec-mem-desc-line = '15';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Note pitch in semitons.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = 'D:/Code/midi-vco/main/include/note.h';
  cp-fileline  = '9';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_
Simple data structure holding a MIDI note.
_EnD_oF_dEf_TeXt_;
}; /* struct */
class = {
  cp-id     = 'class_pool';
  cp-name   = 'Pool';
  cp-section = {
    sec-kind = 'public-func';
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_pool_1ad204880feb8c71e73348485fc09de612';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'Pool';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
Router *
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'router';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = 'D:/Code/midi-vco/main/include/pool.h';
      sec-mem-desc-line = '24';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Constructor.

@param router Pointer to the router holding the lanes.
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_pool_1a7a2eae2dab624dd13c196a20b68f976c';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'set_masks';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
byte
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'lane_mask';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'channel_mask';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = 'D:/Code/midi-vco/main/include/pool.h';
      sec-mem-desc-line = '34';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Setter for the masks.

@param lane_mask Lanes included in the pool. Least significant bits map
    to the firsts lanes.
@param channel_mask Channels whitelisted in the pool. Least significant
    bits map to the first channels.
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_pool_1aea355f50869629b54135c86843762c70';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
bool
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'is_enabled';
      sec-mem-desc-file = 'D:/Code/midi-vco/main/include/pool.h';
      sec-mem-desc-line = '41';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Check if the pool includes at least one lane.

@return Whether the pool is enabled.
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_pool_1a703287c34419cae6dc60ec8089a05e53';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
bool
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'is_free';
      sec-mem-desc-file = 'D:/Code/midi-vco/main/include/pool.h';
      sec-mem-desc-line = '48';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Check if the pool does not have an active note.

@return Whether the pool is free.
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_pool_1af1b3b5b9f7ac012125f917e67d51df8b';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
bool
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'accepts_channel';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
byte
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'channel';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = 'D:/Code/midi-vco/main/include/pool.h';
      sec-mem-desc-line = '56';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Check if a given channel is whitelisted in the pool.

@param channel A MIDI channel (from 1 to 16).
@return Whether the channel is whitelisted.
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_pool_1aebb195c3de79da2fc38b2598e4e46860';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
bool
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'accepts_note';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
Note
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'note';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = 'D:/Code/midi-vco/main/include/pool.h';
      sec-mem-desc-line = '66';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Check if a given note could play in the pool, whether it is free or not.
This checks if the pool is enabled and if the note passes the channel
filter.

@param note The note to check for.
@return Whether the note is accepted.
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_pool_1a1b54262c292f6e1171a432bb013479d7';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'load';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
Note
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'note';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = 'D:/Code/midi-vco/main/include/pool.h';
      sec-mem-desc-line = '73';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Set a new active note, and play that note on the included lanes.

@param note The note to load.
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_pool_1a9b6ed99ddf6a71d0a960b0d9749080c6';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'unload';
      sec-mem-desc-file = 'D:/Code/midi-vco/main/include/pool.h';
      sec-mem-desc-line = '78';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Stop the included lanes and free the pool.
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_pool_1a966575094e29fd6ad4004f7610273ed1';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'bend';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'bend_value';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = 'D:/Code/midi-vco/main/include/pool.h';
      sec-mem-desc-line = '85';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Propagate the <em>pitch-bend</em> message to the lanes.

@param bend_value The amount of bending in the <em>pitch-bend</em> message.
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_pool_1af23bc62de2e464c2045c9d3436d66c50';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
unsigned long
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'get_era';
      sec-mem-desc-file = 'D:/Code/midi-vco/main/include/pool.h';
      sec-mem-desc-line = '90';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Getter for the _era attribute.
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_pool_1a741e5cab5b04b316545b005a3e7bdade';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
Note
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'get_current_note';
      sec-mem-desc-file = 'D:/Code/midi-vco/main/include/pool.h';
      sec-mem-desc-line = '95';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Getter for the _current_note attribute.
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-section = {
    sec-kind = 'private-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'class_pool_1ae588dfc760e666b868a4184154e453f1';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
Router *
_EnD_oF_dEf_TeXt_;
      sec-mem-name = '_router';
      sec-mem-desc-file = 'D:/Code/midi-vco/main/include/pool.h';
      sec-mem-desc-line = '98';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'class_pool_1a3e65544f1f31243433b5d6f8735ac81a';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
byte
_EnD_oF_dEf_TeXt_;
      sec-mem-name = '_lane_mask';
      sec-mem-desc-file = 'D:/Code/midi-vco/main/include/pool.h';
      sec-mem-desc-line = '101';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Mask for the lanes included in the pool.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'class_pool_1a0c12319c180682726de0f0c45df70d17';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
      sec-mem-name = '_channel_mask';
      sec-mem-desc-file = 'D:/Code/midi-vco/main/include/pool.h';
      sec-mem-desc-line = '104';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Mask for the MIDI channels whitelisted in the pool.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'class_pool_1a2f1a3f26e5c285202c860e8253f69b96';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
Note
_EnD_oF_dEf_TeXt_;
      sec-mem-name = '_current_note';
      sec-mem-desc-file = 'D:/Code/midi-vco/main/include/pool.h';
      sec-mem-desc-line = '107';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Last active note.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'class_pool_1ac3680a12338b33f8a446d3ec6e9c31ba';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
unsigned long
_EnD_oF_dEf_TeXt_;
      sec-mem-name = '_era';
      sec-mem-desc-file = 'D:/Code/midi-vco/main/include/pool.h';
      sec-mem-desc-line = '110';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Timestamp of last note activation.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'class_pool_1a216f871252d089c2c098ed45508ebb3d';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
bool
_EnD_oF_dEf_TeXt_;
      sec-mem-name = '_active';
      sec-mem-desc-file = 'D:/Code/midi-vco/main/include/pool.h';
      sec-mem-desc-line = '113';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Wether a note is currently loaded in the pool.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = 'D:/Code/midi-vco/main/include/pool.h';
  cp-fileline  = '15';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_
Abstract representation of an lane allocation unit.

@see [Politique d'allocation des voies](https://github.com/ychalier/midi-vco/wiki/Politique-d'allocation-des-voies)
_EnD_oF_dEf_TeXt_;
}; /* class */
class = {
  cp-id     = 'class_router';
  cp-name   = 'Router';
  cp-section = {
    sec-kind = 'public-func';
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_router_1a5f6a9940103effb64dc3416aeffde8a2';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'Router';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
Display *
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'display';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = 'D:/Code/midi-vco/main/include/router.h';
      sec-mem-desc-line = '21';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Constructor.

@param display A pointer to the LED display wrapper.
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_router_1ad42d4039bd4a012c34c7da685148a8b5';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'setup';
      sec-mem-desc-file = 'D:/Code/midi-vco/main/include/router.h';
      sec-mem-desc-line = '27';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Initialize hardware connections. Must be called once in the main program
setup phase.
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_router_1af4641f2500f092754121c21360d592bd';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
Lane *
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'select';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'lane_id';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = 'D:/Code/midi-vco/main/include/router.h';
      sec-mem-desc-line = '35';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Getter for the lanes.

@param lane_id The lane to select. Indices start at 0.
@return A pointer to the selected lane.
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-section = {
    sec-kind = 'private-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'class_router_1a5558eb5372dd7e94127e9ac2a3890a1c';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
MCP4822 *
_EnD_oF_dEf_TeXt_;
      sec-mem-name = '_dac_1';
      sec-mem-desc-file = 'D:/Code/midi-vco/main/include/router.h';
      sec-mem-desc-line = '38';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'class_router_1abe30aef985d340945b5631fe47f4c45e';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
MCP4822 *
_EnD_oF_dEf_TeXt_;
      sec-mem-name = '_dac_2';
      sec-mem-desc-file = 'D:/Code/midi-vco/main/include/router.h';
      sec-mem-desc-line = '39';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'class_router_1a1562fc7ad7589df8791b551a48c5fe94';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
MCP4822 *
_EnD_oF_dEf_TeXt_;
      sec-mem-name = '_dac_3';
      sec-mem-desc-file = 'D:/Code/midi-vco/main/include/router.h';
      sec-mem-desc-line = '40';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'class_router_1a8c1003acaa85ee8ab8b3559d000f7597';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
MCP4822 *
_EnD_oF_dEf_TeXt_;
      sec-mem-name = '_dac_4';
      sec-mem-desc-file = 'D:/Code/midi-vco/main/include/router.h';
      sec-mem-desc-line = '41';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'class_router_1a810ed00928f13e92edeee3775a89ae40';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
Lane *
_EnD_oF_dEf_TeXt_;
      sec-mem-name = '_lane_1';
      sec-mem-desc-file = 'D:/Code/midi-vco/main/include/router.h';
      sec-mem-desc-line = '42';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'class_router_1a5259aa3caced4019d33f4e67fe62a192';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
Lane *
_EnD_oF_dEf_TeXt_;
      sec-mem-name = '_lane_2';
      sec-mem-desc-file = 'D:/Code/midi-vco/main/include/router.h';
      sec-mem-desc-line = '43';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'class_router_1a65d262aaa2f3c753e51f469e5327f23e';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
Lane *
_EnD_oF_dEf_TeXt_;
      sec-mem-name = '_lane_3';
      sec-mem-desc-file = 'D:/Code/midi-vco/main/include/router.h';
      sec-mem-desc-line = '44';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'class_router_1a12225e44c339bd606083d7006201f6dc';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
Lane *
_EnD_oF_dEf_TeXt_;
      sec-mem-name = '_lane_4';
      sec-mem-desc-file = 'D:/Code/midi-vco/main/include/router.h';
      sec-mem-desc-line = '45';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'class_router_1a50226ec1b26c8f766db5c21c8c22a54a';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
Lane *
_EnD_oF_dEf_TeXt_;
      sec-mem-name = '_lane_5';
      sec-mem-desc-file = 'D:/Code/midi-vco/main/include/router.h';
      sec-mem-desc-line = '46';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'class_router_1a95d82b0f8b7bf97e0fa9e23160d9b720';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
Lane *
_EnD_oF_dEf_TeXt_;
      sec-mem-name = '_lane_6';
      sec-mem-desc-file = 'D:/Code/midi-vco/main/include/router.h';
      sec-mem-desc-line = '47';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'class_router_1a67bdaf0211be01346225c5de71946297';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
Lane *
_EnD_oF_dEf_TeXt_;
      sec-mem-name = '_lane_7';
      sec-mem-desc-file = 'D:/Code/midi-vco/main/include/router.h';
      sec-mem-desc-line = '48';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'class_router_1adbd1ca8387722b74c07cdb993b8a5b8c';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
Lane *
_EnD_oF_dEf_TeXt_;
      sec-mem-name = '_lane_8';
      sec-mem-desc-file = 'D:/Code/midi-vco/main/include/router.h';
      sec-mem-desc-line = '49';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = 'D:/Code/midi-vco/main/include/router.h';
  cp-fileline  = '13';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_
Holder for the different lanes.
_EnD_oF_dEf_TeXt_;
}; /* class */
file = {
  file-id   = 'allocator_8h';
  file-name = 'allocator.h';
  file-full-name  = 'D:/Code/midi-vco/main/include/allocator.h';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'config_8h';
  file-name = 'config.h';
  file-full-name  = 'D:/Code/midi-vco/main/include/config.h';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'constants_8h';
  file-name = 'constants.h';
    define = {
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'constants_8h_1ab8c5840709e0139a30907dd6cd91587e';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'PIN_SELECT_MODE';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
A15
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = 'D:/Code/midi-vco/main/include/constants.h';
      define-mem-desc-line = '6';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'constants_8h_1a3d13a81e56c4afd82b484faa7f520314';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'PIN_SELECT_PRIORITY';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
42
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = 'D:/Code/midi-vco/main/include/constants.h';
      define-mem-desc-line = '7';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'constants_8h_1a0a3ee7544eef48f5b758d4adb44ade09';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'PIN_SELECT_CHANNEL';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
40
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = 'D:/Code/midi-vco/main/include/constants.h';
      define-mem-desc-line = '8';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'constants_8h_1af1ab79f4742613cc2f7f472d9d6c6570';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'PIN_LED_1';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
22
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = 'D:/Code/midi-vco/main/include/constants.h';
      define-mem-desc-line = '10';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'constants_8h_1a0856e6b89a9e5cb8a8bbbf6ba9f7dccc';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'PIN_LED_2';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
24
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = 'D:/Code/midi-vco/main/include/constants.h';
      define-mem-desc-line = '11';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'constants_8h_1afac55df431f2832acd5b0afa6f56cbc1';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'PIN_LED_3';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
26
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = 'D:/Code/midi-vco/main/include/constants.h';
      define-mem-desc-line = '12';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'constants_8h_1a1fffd93d20b6fe777713bd58125e3e0b';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'PIN_LED_4';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
28
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = 'D:/Code/midi-vco/main/include/constants.h';
      define-mem-desc-line = '13';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'constants_8h_1a6581c9faeb95d91f151a7fda5ff9d963';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'PIN_LED_5';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
30
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = 'D:/Code/midi-vco/main/include/constants.h';
      define-mem-desc-line = '14';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'constants_8h_1a897044b754ba688fa23ced24e2455458';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'PIN_LED_6';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
32
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = 'D:/Code/midi-vco/main/include/constants.h';
      define-mem-desc-line = '15';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'constants_8h_1ad374e1f0585eb6df88024972c2c7dee4';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'PIN_LED_7';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
34
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = 'D:/Code/midi-vco/main/include/constants.h';
      define-mem-desc-line = '16';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'constants_8h_1a6ea466ac288223772f03b58400456708';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'PIN_LED_8';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
36
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = 'D:/Code/midi-vco/main/include/constants.h';
      define-mem-desc-line = '17';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'constants_8h_1ad88e57eaf842b2e59763ddd26e570f54';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'PIN_SS_1';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
47
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = 'D:/Code/midi-vco/main/include/constants.h';
      define-mem-desc-line = '19';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'constants_8h_1aa95b2fdbfe6869d12e4172ca3dbd833e';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'PIN_SS_2';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
45
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = 'D:/Code/midi-vco/main/include/constants.h';
      define-mem-desc-line = '20';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'constants_8h_1acbf0706d312f86e500be5623e5a11fea';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'PIN_SS_3';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
43
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = 'D:/Code/midi-vco/main/include/constants.h';
      define-mem-desc-line = '21';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'constants_8h_1a1689ecece881d3347814494327c6660c';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'PIN_SS_4';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
41
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = 'D:/Code/midi-vco/main/include/constants.h';
      define-mem-desc-line = '22';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'constants_8h_1a324ef689235f8a6f855a319ad2744bff';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'PIN_GATE_1';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
37
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = 'D:/Code/midi-vco/main/include/constants.h';
      define-mem-desc-line = '24';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'constants_8h_1ab61fbddf9e4234dd94ed248fed2fa4e9';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'PIN_GATE_2';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
35
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = 'D:/Code/midi-vco/main/include/constants.h';
      define-mem-desc-line = '25';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'constants_8h_1a0939dae965340e85e849ed6ceb6d142a';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'PIN_GATE_3';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
33
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = 'D:/Code/midi-vco/main/include/constants.h';
      define-mem-desc-line = '26';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'constants_8h_1a774e5a21aa7affe4436ce191108880da';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'PIN_GATE_4';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
31
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = 'D:/Code/midi-vco/main/include/constants.h';
      define-mem-desc-line = '27';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'constants_8h_1a0637a1d4ee619b832e0cbf8d80805d20';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'PIN_GATE_5';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
29
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = 'D:/Code/midi-vco/main/include/constants.h';
      define-mem-desc-line = '28';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'constants_8h_1ab042ceaf33123a23b3fe6bded76ffb65';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'PIN_GATE_6';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
27
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = 'D:/Code/midi-vco/main/include/constants.h';
      define-mem-desc-line = '29';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'constants_8h_1a0d59c39f33f14dfb6b10472524dec8ca';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'PIN_GATE_7';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
25
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = 'D:/Code/midi-vco/main/include/constants.h';
      define-mem-desc-line = '30';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'constants_8h_1a1841a11f8350068baeb1586c0b6addca';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'PIN_GATE_8';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
23
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = 'D:/Code/midi-vco/main/include/constants.h';
      define-mem-desc-line = '31';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'constants_8h_1a2a33587f0528d88828ffca16d9623130';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'MODE_MONOPHONIC';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
0
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = 'D:/Code/midi-vco/main/include/constants.h';
      define-mem-desc-line = '35';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'constants_8h_1a45bff5fc91e80789fafb31cc3f95ef5f';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'MODE_DUOPHONIC';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
1
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = 'D:/Code/midi-vco/main/include/constants.h';
      define-mem-desc-line = '36';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'constants_8h_1acd74d69a69f038b2f32b3ac39418e800';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'MODE_QUADROPHONIC';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
2
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = 'D:/Code/midi-vco/main/include/constants.h';
      define-mem-desc-line = '37';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'constants_8h_1a9c52b96cf8a40e99ced21bb65d9cf91a';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'MODE_OCTOPHONIC';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
3
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = 'D:/Code/midi-vco/main/include/constants.h';
      define-mem-desc-line = '38';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'constants_8h_1a8d6465348cb10efb2d574fc6bfd19784';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'PRIORITY_KEEP_FIRST';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
0
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = 'D:/Code/midi-vco/main/include/constants.h';
      define-mem-desc-line = '40';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'constants_8h_1a039d191588d73c4d8b1dba9ee2c5876a';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'PRIORITY_REPLACE_FIRST';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
1
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = 'D:/Code/midi-vco/main/include/constants.h';
      define-mem-desc-line = '41';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'constants_8h_1a604e82d330593dc3bd2fe66de3d2d97b';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'PRIORITY_REPLACE_LAST';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
2
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = 'D:/Code/midi-vco/main/include/constants.h';
      define-mem-desc-line = '42';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'constants_8h_1a1e18500136b261441c6883c64ef86707';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'CHANNEL_FILTER_OFF';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
0
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = 'D:/Code/midi-vco/main/include/constants.h';
      define-mem-desc-line = '44';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'constants_8h_1a8de9f7a3e6eb643e5a557363534314f9';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'CHANNEL_FILTER_ON';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
1
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = 'D:/Code/midi-vco/main/include/constants.h';
      define-mem-desc-line = '45';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'constants_8h_1a47580cc5f371cab4485280db10855e6e';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'DAC_VMAX';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
4.096
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = 'D:/Code/midi-vco/main/include/constants.h';
      define-mem-desc-line = '49';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'constants_8h_1a41cdbe8b9863be840443009aaf0f0790';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'AMP_GAIN';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
1.8408203125
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = 'D:/Code/midi-vco/main/include/constants.h';
      define-mem-desc-line = '50';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'constants_8h_1a5a4813366397b194aa7fd51b50c01b19';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'MIDI_MIN_PITCH';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
20
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = 'D:/Code/midi-vco/main/include/constants.h';
      define-mem-desc-line = '51';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'constants_8h_1a62a22c87884bffa1cccdf68f74e557d0';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'PITCH_BEND_RANGE';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
2.0
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = 'D:/Code/midi-vco/main/include/constants.h';
      define-mem-desc-line = '52';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'constants_8h_1a4d8c00b39cabaaf19c47b5723e2c9142';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'DEFAULT_DISPLAY_DURATION';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
1000
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = 'D:/Code/midi-vco/main/include/constants.h';
      define-mem-desc-line = '54';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'constants_8h_1a73afc0e3de7253b20d26d43395608527';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'LANE_COUNT';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
8
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = 'D:/Code/midi-vco/main/include/constants.h';
      define-mem-desc-line = '56';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    };
  file-full-name  = 'D:/Code/midi-vco/main/include/constants.h';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'display_8h';
  file-name = 'display.h';
  file-full-name  = 'D:/Code/midi-vco/main/include/display.h';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'lane_8h';
  file-name = 'lane.h';
  file-full-name  = 'D:/Code/midi-vco/main/include/lane.h';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'note_8h';
  file-name = 'note.h';
    typedef = {
    typedef-member = {
      typedef-mem-kind = 'typedef';
      typedef-mem-id   = 'note_8h_1a820e8754f76d4d189d5347d302964a1d';
      typedef-mem-virt = normal;
      typedef-mem-prot = public;
      typedef-mem-type = <<_EnD_oF_dEf_TeXt_
struct Note
_EnD_oF_dEf_TeXt_;
      typedef-mem-name = 'Note';
      typedef-mem-desc-file = 'D:/Code/midi-vco/main/include/note.h';
      typedef-mem-desc-line = '16';
      typedef-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      typedef-mem-documentation = <<_EnD_oF_dEf_TeXt_
Simple data structure holding a MIDI note.
_EnD_oF_dEf_TeXt_;
    }; /* typedef-member */
    };
    func = {
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'note_8h_1ab4bf0d3b509b2ce0e2ed47152bfdf701';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
bool
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'operator==';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const Note &
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'l_note';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const Note &
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'r_note';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'D:/Code/midi-vco/main/include/note.h';
      func-mem-desc-line = '21';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Overloading equality check to compare two notes.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    };
  file-full-name  = 'D:/Code/midi-vco/main/include/note.h';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'pool_8h';
  file-name = 'pool.h';
  file-full-name  = 'D:/Code/midi-vco/main/include/pool.h';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'router_8h';
  file-name = 'router.h';
  file-full-name  = 'D:/Code/midi-vco/main/include/router.h';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'main_8ino';
  file-name = 'main.ino';
  file-full-name  = 'D:/Code/midi-vco/main/main.ino';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'allocator_8cpp';
  file-name = 'allocator.cpp';
  file-full-name  = 'D:/Code/midi-vco/main/src/allocator.cpp';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'config_8cpp';
  file-name = 'config.cpp';
  file-full-name  = 'D:/Code/midi-vco/main/src/config.cpp';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'display_8cpp';
  file-name = 'display.cpp';
    define = {
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'display_8cpp_1a6ff31406fe11564ac6a328727877cdbd';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'DEMO_DELAY';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
50
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = 'D:/Code/midi-vco/main/src/display.cpp';
      define-mem-desc-line = '4';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    };
  file-full-name  = 'D:/Code/midi-vco/main/src/display.cpp';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'lane_8cpp';
  file-name = 'lane.cpp';
  file-full-name  = 'D:/Code/midi-vco/main/src/lane.cpp';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'note_8cpp';
  file-name = 'note.cpp';
    func = {
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'note_8cpp_1ab4bf0d3b509b2ce0e2ed47152bfdf701';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
bool
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'operator==';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const Note &
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'l_note';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const Note &
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'r_note';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'D:/Code/midi-vco/main/src/note.cpp';
      func-mem-desc-line = '4';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Overloading equality check to compare two notes.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    };
  file-full-name  = 'D:/Code/midi-vco/main/src/note.cpp';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'pool_8cpp';
  file-name = 'pool.cpp';
    func = {
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'pool_8cpp_1ae9d5c80880ad7b12c96ffa0c161a1e89';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'channel_to_mask';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
byte
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'channel';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'D:/Code/midi-vco/main/src/pool.cpp';
      func-mem-desc-line = '4';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    };
  file-full-name  = 'D:/Code/midi-vco/main/src/pool.cpp';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'router_8cpp';
  file-name = 'router.cpp';
  file-full-name  = 'D:/Code/midi-vco/main/src/router.cpp';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
